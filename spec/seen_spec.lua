describe("seen", function()
  local meta, seen, no
  setup(function()
    require "meta.assert"
    meta = require "meta"
    no = meta.no
  end)
  before_each(function() seen=meta.seen() end)
  it("test", function()
    assert.is_false(seen['any'])
    assert.is_true(seen['any'])
    assert.is_false(seen['other'])
    assert.is_true(seen['other'])
    assert.equal('ok', seen + 'ok')
    assert.is_nil(seen + 'ok')
    assert.is_nil(seen + 'ok')
    seen = seen()
    assert.equal('ok', seen + 'ok')
    assert.is_nil(seen + 'ok')
    assert.is_nil(seen + 'ok')
  end)
  it("complex", function()
    seen = meta.seen(function(x) return no.strip(x, '%/?%?.*$') end)
    assert.is_table(seen)
    local it = package.path:gmatch("([^;]+)")
    assert.is_function(it)
    assert.equal('lua', ((seen .. it) % no.isdir)[1])
  end)
  it("complex2", function()
    assert.is_table(seen)
    local it = package.path:gmatch("([^;]+)")
    assert.is_function(it)
    assert.equal('lua', (((seen ^ function(x) return no.strip(x, '%/?%?.*$') end)..it) % no.isdir)[1])
  end)
  it("complex 3", function()
    assert.is_table(seen)
    local it = package.path:gmatch("([^;]+)")
    assert.is_function(it)
    assert.equal('lua', (seen ^ function(x) return no.strip(x, '%/?%?.*$') end * it % no.isdir)[1])
  end)
end)
